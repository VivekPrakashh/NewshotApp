import 'package:drift/internal/versioned_schema.dart' as i0;
import 'package:drift/drift.dart' as i1;
import 'package:drift/drift.dart';

import '../../core/extenstions.dart'; // ignore_for_file: type=lint,unused_import

// GENERATED BY drift_dev, DO NOT MODIFY.
final class _S2 extends i0.VersionedSchema {
  _S2({required super.database}) : super(version: 2);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    localSession,
    newsLogs,
    unreadNews,
    newsBookmarks,
    unreadThread,
  ];
  late final Shape0 localSession = Shape0(
      source: i0.VersionedTable(
        entityName: 'local_session',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 newsLogs = Shape1(
      source: i0.VersionedTable(
        entityName: 'news_logs',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 unreadNews = Shape2(
      source: i0.VersionedTable(
        entityName: 'unread_news',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 newsBookmarks = Shape3(
      source: i0.VersionedTable(
        entityName: 'news_bookmarks',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(news_id)',
        ],
        columns: [
          _column_28,
          _column_29,
          _column_14,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 unreadThread = Shape4(
      source: i0.VersionedTable(
        entityName: 'unread_thread',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_32,
          _column_11,
          _column_12,
          _column_22,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape0 extends i0.VersionedTable {
  Shape0({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get userId =>
      columnsByName['user_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get languageCode =>
      columnsByName['language_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get token =>
      columnsByName['token']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get appVersion =>
      columnsByName['app_version']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get fcmToken =>
      columnsByName['fcm_token']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get lastFatchedThreadId =>
      columnsByName['last_fatched_thread_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get address =>
      columnsByName['address']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get theme =>
      columnsByName['theme']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get fontSize =>
      columnsByName['font_size']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_0(String aliasedName) =>
    i1.GeneratedColumn<String>('user_id', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways('UNIQUE'));
i1.GeneratedColumn<String> _column_1(String aliasedName) =>
    i1.GeneratedColumn<String>('language_code', aliasedName, false,
        type: i1.DriftSqlType.string, defaultValue: const Variable('hi'));
i1.GeneratedColumn<String> _column_2(String aliasedName) =>
    i1.GeneratedColumn<String>('token', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_3(String aliasedName) =>
    i1.GeneratedColumn<String>('app_version', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_4(String aliasedName) =>
    i1.GeneratedColumn<String>('fcm_token', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_5(String aliasedName) =>
    i1.GeneratedColumn<String>('last_fatched_thread_id', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_6(String aliasedName) =>
    i1.GeneratedColumn<String>('address', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<int> _column_7(String aliasedName) =>
    i1.GeneratedColumn<int>('theme', aliasedName, false,
        type: i1.DriftSqlType.int);
i1.GeneratedColumn<String> _column_8(String aliasedName) =>
    i1.GeneratedColumn<String>('font_size', aliasedName, false,
        type: i1.DriftSqlType.string);

class Shape1 extends i0.VersionedTable {
  Shape1({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get newsId =>
      columnsByName['news_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get pollAnswer =>
      columnsByName['poll_answer']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get durationWatched =>
      columnsByName['duration_watched']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get isNews =>
      columnsByName['is_news']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<String> _column_9(String aliasedName) =>
    i1.GeneratedColumn<String>('news_id', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways('UNIQUE'));
i1.GeneratedColumn<String> _column_10(String aliasedName) =>
    i1.GeneratedColumn<String>('poll_answer', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<DateTime> _column_11(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('created_at', aliasedName, false,
        type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<DateTime> _column_12(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('updated_at', aliasedName, false,
        type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<int> _column_13(String aliasedName) =>
    i1.GeneratedColumn<int>('duration_watched', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Variable(0));
i1.GeneratedColumn<bool> _column_14(String aliasedName) =>
    i1.GeneratedColumn<bool>('is_news', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("is_news" IN (0, 1))'));

class Shape2 extends i0.VersionedTable {
  Shape2({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get newsId =>
      columnsByName['news_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get title =>
      columnsByName['title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description =>
      columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get category =>
      columnsByName['category']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get language =>
      columnsByName['language']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get url =>
      columnsByName['url']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get urlToImage =>
      columnsByName['url_to_image']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get priority =>
      columnsByName['priority']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get publishedOn =>
      columnsByName['published_on']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get tags =>
      columnsByName['tags']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get faq =>
      columnsByName['faq']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get poll =>
      columnsByName['poll']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_15(String aliasedName) =>
    i1.GeneratedColumn<String>('title', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_16(String aliasedName) =>
    i1.GeneratedColumn<String>('description', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_17(String aliasedName) =>
    i1.GeneratedColumn<String>('category', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_18(String aliasedName) =>
    i1.GeneratedColumn<String>('language', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_19(String aliasedName) =>
    i1.GeneratedColumn<String>('url', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_20(String aliasedName) =>
    i1.GeneratedColumn<String>('url_to_image', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_21(String aliasedName) =>
    i1.GeneratedColumn<String>('priority', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<DateTime> _column_22(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('published_on', aliasedName, true,
        type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<DateTime> _column_23(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('created_at', aliasedName, true,
        type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<DateTime> _column_24(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('updated_at', aliasedName, true,
        type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<String> _column_25(String aliasedName) =>
    i1.GeneratedColumn<String>('tags', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_26(String aliasedName) =>
    i1.GeneratedColumn<String>('faq', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_27(String aliasedName) =>
    i1.GeneratedColumn<String>('poll', aliasedName, true,
        type: i1.DriftSqlType.string);

class Shape3 extends i0.VersionedTable {
  Shape3({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get newsId =>
      columnsByName['news_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get categoryId =>
      columnsByName['category_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get isNews =>
      columnsByName['is_news']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<String> _column_28(String aliasedName) =>
    i1.GeneratedColumn<String>('news_id', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_29(String aliasedName) =>
    i1.GeneratedColumn<String>('category_id', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<DateTime> _column_30(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('created_at', aliasedName, false,
        type: i1.DriftSqlType.dateTime, defaultValue: Variable(DateTime.now()));
i1.GeneratedColumn<DateTime> _column_31(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('updated_at', aliasedName, false,
        type: i1.DriftSqlType.dateTime, defaultValue: Variable(DateTime.now()));

class Shape4 extends i0.VersionedTable {
  Shape4({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get id =>
      columnsByName['id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get publishedOn =>
      columnsByName['published_on']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get facts =>
      columnsByName['facts']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get tags =>
      columnsByName['tags']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get source =>
      columnsByName['source']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get backgroundImgUrl =>
      columnsByName['background_img_url']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get threadTitle =>
      columnsByName['thread_title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get titleHeader =>
      columnsByName['title_header']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get titleFooter =>
      columnsByName['title_footer']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get contentTitle =>
      columnsByName['content_title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get language =>
      columnsByName['language']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_32(String aliasedName) =>
    i1.GeneratedColumn<String>('id', aliasedName, false,
        type: i1.DriftSqlType.string,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways('UNIQUE'));
i1.GeneratedColumn<String> _column_33(String aliasedName) =>
    i1.GeneratedColumn<String>('facts', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_34(String aliasedName) =>
    i1.GeneratedColumn<String>('tags', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_35(String aliasedName) =>
    i1.GeneratedColumn<String>('source', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_36(String aliasedName) =>
    i1.GeneratedColumn<String>('background_img_url', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_37(String aliasedName) =>
    i1.GeneratedColumn<String>('thread_title', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_38(String aliasedName) =>
    i1.GeneratedColumn<String>('title_header', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_39(String aliasedName) =>
    i1.GeneratedColumn<String>('title_footer', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_40(String aliasedName) =>
    i1.GeneratedColumn<String>('content_title', aliasedName, true,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_41(String aliasedName) =>
    i1.GeneratedColumn<String>('language', aliasedName, false,
        type: i1.DriftSqlType.string, defaultValue: const Variable("english"));

final class _S3 extends i0.VersionedSchema {
  _S3({required super.database}) : super(version: 3);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    localSession,
    newsLogs,
    unreadNews,
    newsBookmarks,
    unreadThread,
    showCaseActions,
  ];
  late final Shape0 localSession = Shape0(
      source: i0.VersionedTable(
        entityName: 'local_session',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 newsLogs = Shape1(
      source: i0.VersionedTable(
        entityName: 'news_logs',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape2 unreadNews = Shape2(
      source: i0.VersionedTable(
        entityName: 'unread_news',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 newsBookmarks = Shape3(
      source: i0.VersionedTable(
        entityName: 'news_bookmarks',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(news_id)',
        ],
        columns: [
          _column_28,
          _column_29,
          _column_14,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 unreadThread = Shape4(
      source: i0.VersionedTable(
        entityName: 'unread_thread',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_32,
          _column_11,
          _column_12,
          _column_22,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 showCaseActions = Shape5(
      source: i0.VersionedTable(
        entityName: 'show_case_actions',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(action_id)',
        ],
        columns: [
          _column_42,
          _column_43,
          _column_44,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape5 extends i0.VersionedTable {
  Shape5({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get actionId =>
      columnsByName['action_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get hasShownToolTip =>
      columnsByName['has_shown_tool_tip']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get hasActionTap =>
      columnsByName['has_action_tap']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<String> _column_42(String aliasedName) =>
    i1.GeneratedColumn<String>('action_id', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<bool> _column_43(String aliasedName) =>
    i1.GeneratedColumn<bool>('has_shown_tool_tip', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("has_shown_tool_tip" IN (0, 1))'),
        defaultValue: const Constant(false));
i1.GeneratedColumn<bool> _column_44(String aliasedName) =>
    i1.GeneratedColumn<bool>('has_action_tap', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("has_action_tap" IN (0, 1))'),
        defaultValue: const Constant(false));

final class _S5 extends i0.VersionedSchema {
  _S5({required super.database}) : super(version: 5);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    localSession,
    newsLogs,
    unreadNews,
    newsBookmarks,
    unreadThread,
    showCaseActions,
  ];
  late final Shape0 localSession = Shape0(
      source: i0.VersionedTable(
        entityName: 'local_session',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 newsLogs = Shape1(
      source: i0.VersionedTable(
        entityName: 'news_logs',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape6 unreadNews = Shape6(
      source: i0.VersionedTable(
        entityName: 'unread_news',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_45,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 newsBookmarks = Shape3(
      source: i0.VersionedTable(
        entityName: 'news_bookmarks',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(news_id)',
        ],
        columns: [
          _column_28,
          _column_29,
          _column_14,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 unreadThread = Shape4(
      source: i0.VersionedTable(
        entityName: 'unread_thread',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_32,
          _column_11,
          _column_12,
          _column_22,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 showCaseActions = Shape5(
      source: i0.VersionedTable(
        entityName: 'show_case_actions',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(action_id)',
        ],
        columns: [
          _column_42,
          _column_43,
          _column_44,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape6 extends i0.VersionedTable {
  Shape6({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get newsId =>
      columnsByName['news_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get title =>
      columnsByName['title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description =>
      columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get category =>
      columnsByName['category']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get language =>
      columnsByName['language']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get url =>
      columnsByName['url']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get urlToImage =>
      columnsByName['url_to_image']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get priority =>
      columnsByName['priority']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get publishedOn =>
      columnsByName['published_on']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get tags =>
      columnsByName['tags']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get faq =>
      columnsByName['faq']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get poll =>
      columnsByName['poll']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get formattedDescription =>
      columnsByName['formatted_description']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_45(String aliasedName) =>
    i1.GeneratedColumn<String>('formatted_description', aliasedName, true,
        type: i1.DriftSqlType.string);

final class _S6 extends i0.VersionedSchema {
  _S6({required super.database}) : super(version: 6);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    localSession,
    newsLogs,
    unreadNews,
    newsBookmarks,
    unreadThread,
    showCaseActions,
  ];
  late final Shape0 localSession = Shape0(
      source: i0.VersionedTable(
        entityName: 'local_session',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 newsLogs = Shape1(
      source: i0.VersionedTable(
        entityName: 'news_logs',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape7 unreadNews = Shape7(
      source: i0.VersionedTable(
        entityName: 'unread_news',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_45,
          _column_35,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 newsBookmarks = Shape3(
      source: i0.VersionedTable(
        entityName: 'news_bookmarks',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(news_id)',
        ],
        columns: [
          _column_28,
          _column_29,
          _column_14,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 unreadThread = Shape4(
      source: i0.VersionedTable(
        entityName: 'unread_thread',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_32,
          _column_11,
          _column_12,
          _column_22,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 showCaseActions = Shape5(
      source: i0.VersionedTable(
        entityName: 'show_case_actions',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(action_id)',
        ],
        columns: [
          _column_42,
          _column_43,
          _column_44,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape7 extends i0.VersionedTable {
  Shape7({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get newsId =>
      columnsByName['news_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get title =>
      columnsByName['title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description =>
      columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get category =>
      columnsByName['category']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get language =>
      columnsByName['language']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get url =>
      columnsByName['url']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get urlToImage =>
      columnsByName['url_to_image']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get priority =>
      columnsByName['priority']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get publishedOn =>
      columnsByName['published_on']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get tags =>
      columnsByName['tags']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get faq =>
      columnsByName['faq']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get poll =>
      columnsByName['poll']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get formattedDescription =>
      columnsByName['formatted_description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get source =>
      columnsByName['source']! as i1.GeneratedColumn<String>;
}

final class _S7 extends i0.VersionedSchema {
  _S7({required super.database}) : super(version: 7);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    localSession,
    newsLogs,
    unreadNews,
    newsBookmarks,
    unreadThread,
    showCaseActions,
  ];
  late final Shape0 localSession = Shape0(
      source: i0.VersionedTable(
        entityName: 'local_session',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 newsLogs = Shape1(
      source: i0.VersionedTable(
        entityName: 'news_logs',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape8 unreadNews = Shape8(
      source: i0.VersionedTable(
        entityName: 'unread_news',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_46,
          _column_45,
          _column_35,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 newsBookmarks = Shape3(
      source: i0.VersionedTable(
        entityName: 'news_bookmarks',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(news_id)',
        ],
        columns: [
          _column_28,
          _column_29,
          _column_14,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 unreadThread = Shape4(
      source: i0.VersionedTable(
        entityName: 'unread_thread',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_32,
          _column_11,
          _column_12,
          _column_22,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 showCaseActions = Shape5(
      source: i0.VersionedTable(
        entityName: 'show_case_actions',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(action_id)',
        ],
        columns: [
          _column_42,
          _column_43,
          _column_44,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape8 extends i0.VersionedTable {
  Shape8({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get newsId =>
      columnsByName['news_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get title =>
      columnsByName['title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description =>
      columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get category =>
      columnsByName['category']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get language =>
      columnsByName['language']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get url =>
      columnsByName['url']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get urlToImage =>
      columnsByName['url_to_image']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get priority =>
      columnsByName['priority']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get publishedOn =>
      columnsByName['published_on']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get tags =>
      columnsByName['tags']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get faq =>
      columnsByName['faq']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get poll =>
      columnsByName['poll']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get originalTitle =>
      columnsByName['original_title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get formattedDescription =>
      columnsByName['formatted_description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get source =>
      columnsByName['source']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_46(String aliasedName) =>
    i1.GeneratedColumn<String>('original_title', aliasedName, true,
        type: i1.DriftSqlType.string);

final class _S8 extends i0.VersionedSchema {
  _S8({required super.database}) : super(version: 8);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    localSession,
    newsLogs,
    unreadNews,
    newsBookmarks,
    unreadThread,
    showCaseActions,
  ];
  late final Shape0 localSession = Shape0(
      source: i0.VersionedTable(
        entityName: 'local_session',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 newsLogs = Shape1(
      source: i0.VersionedTable(
        entityName: 'news_logs',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape9 unreadNews = Shape9(
      source: i0.VersionedTable(
        entityName: 'unread_news',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 newsBookmarks = Shape3(
      source: i0.VersionedTable(
        entityName: 'news_bookmarks',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(news_id)',
        ],
        columns: [
          _column_28,
          _column_29,
          _column_14,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 unreadThread = Shape4(
      source: i0.VersionedTable(
        entityName: 'unread_thread',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_32,
          _column_11,
          _column_12,
          _column_22,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 showCaseActions = Shape5(
      source: i0.VersionedTable(
        entityName: 'show_case_actions',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(action_id)',
        ],
        columns: [
          _column_42,
          _column_43,
          _column_44,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape9 extends i0.VersionedTable {
  Shape9({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get newsId =>
      columnsByName['news_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get title =>
      columnsByName['title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description =>
      columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get category =>
      columnsByName['category']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get language =>
      columnsByName['language']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get url =>
      columnsByName['url']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get urlToImage =>
      columnsByName['url_to_image']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get priority =>
      columnsByName['priority']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get publishedOn =>
      columnsByName['published_on']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get tags =>
      columnsByName['tags']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get faq =>
      columnsByName['faq']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get poll =>
      columnsByName['poll']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get originalTitle =>
      columnsByName['original_title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get formattedDescription =>
      columnsByName['formatted_description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get source =>
      columnsByName['source']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get pollApproved =>
      columnsByName['poll_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get quizApproved =>
      columnsByName['quiz_approved']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<bool> _column_47(String aliasedName) =>
    i1.GeneratedColumn<bool>('poll_approved', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("poll_approved" IN (0, 1))'));
i1.GeneratedColumn<bool> _column_48(String aliasedName) =>
    i1.GeneratedColumn<bool>('quiz_approved', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("quiz_approved" IN (0, 1))'));

final class _S9 extends i0.VersionedSchema {
  _S9({required super.database}) : super(version: 9);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    localSession,
    newsLogs,
    unreadNews,
    newsBookmarks,
    unreadThread,
    showCaseActions,
  ];
  late final Shape0 localSession = Shape0(
      source: i0.VersionedTable(
        entityName: 'local_session',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 newsLogs = Shape1(
      source: i0.VersionedTable(
        entityName: 'news_logs',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape10 unreadNews = Shape10(
      source: i0.VersionedTable(
        entityName: 'unread_news',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 newsBookmarks = Shape3(
      source: i0.VersionedTable(
        entityName: 'news_bookmarks',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(news_id)',
        ],
        columns: [
          _column_28,
          _column_29,
          _column_14,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 unreadThread = Shape4(
      source: i0.VersionedTable(
        entityName: 'unread_thread',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_32,
          _column_11,
          _column_12,
          _column_22,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 showCaseActions = Shape5(
      source: i0.VersionedTable(
        entityName: 'show_case_actions',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(action_id)',
        ],
        columns: [
          _column_42,
          _column_43,
          _column_44,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape10 extends i0.VersionedTable {
  Shape10({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get newsId =>
      columnsByName['news_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get title =>
      columnsByName['title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description =>
      columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get category =>
      columnsByName['category']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get language =>
      columnsByName['language']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get url =>
      columnsByName['url']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get urlToImage =>
      columnsByName['url_to_image']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get priority =>
      columnsByName['priority']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get publishedOn =>
      columnsByName['published_on']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get tags =>
      columnsByName['tags']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get faq =>
      columnsByName['faq']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get poll =>
      columnsByName['poll']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get originalTitle =>
      columnsByName['original_title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get formattedDescription =>
      columnsByName['formatted_description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get source =>
      columnsByName['source']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get pollApproved =>
      columnsByName['poll_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get quizApproved =>
      columnsByName['quiz_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get faqApproved =>
      columnsByName['faq_approved']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<bool> _column_49(String aliasedName) =>
    i1.GeneratedColumn<bool>('faq_approved', aliasedName, true,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("faq_approved" IN (0, 1))'));

final class _S10 extends i0.VersionedSchema {
  _S10({required super.database}) : super(version: 10);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    localSession,
    newsLogs,
    unreadNews,
    newsBookmarks,
    unreadThread,
    showCaseActions,
  ];
  late final Shape11 localSession = Shape11(
      source: i0.VersionedTable(
        entityName: 'local_session',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_50,
          _column_51,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 newsLogs = Shape1(
      source: i0.VersionedTable(
        entityName: 'news_logs',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape10 unreadNews = Shape10(
      source: i0.VersionedTable(
        entityName: 'unread_news',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 newsBookmarks = Shape3(
      source: i0.VersionedTable(
        entityName: 'news_bookmarks',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(news_id)',
        ],
        columns: [
          _column_28,
          _column_29,
          _column_14,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 unreadThread = Shape4(
      source: i0.VersionedTable(
        entityName: 'unread_thread',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_32,
          _column_11,
          _column_12,
          _column_22,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 showCaseActions = Shape5(
      source: i0.VersionedTable(
        entityName: 'show_case_actions',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(action_id)',
        ],
        columns: [
          _column_42,
          _column_43,
          _column_44,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape11 extends i0.VersionedTable {
  Shape11({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get userId =>
      columnsByName['user_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get languageCode =>
      columnsByName['language_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get token =>
      columnsByName['token']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get appVersion =>
      columnsByName['app_version']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get fcmToken =>
      columnsByName['fcm_token']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get lastFatchedThreadId =>
      columnsByName['last_fatched_thread_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get address =>
      columnsByName['address']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get theme =>
      columnsByName['theme']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get fontSize =>
      columnsByName['font_size']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get ratingReminder =>
      columnsByName['rating_reminder']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get lastAskedRating =>
      columnsByName['last_asked_rating']! as i1.GeneratedColumn<DateTime>;
}

i1.GeneratedColumn<int> _column_50(String aliasedName) =>
    i1.GeneratedColumn<int>('rating_reminder', aliasedName, true,
        type: i1.DriftSqlType.int);
i1.GeneratedColumn<DateTime> _column_51(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('last_asked_rating', aliasedName, true,
        type: i1.DriftSqlType.dateTime);

final class _S11 extends i0.VersionedSchema {
  _S11({required super.database}) : super(version: 11);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    localSession,
    newsLogs,
    unreadNews,
    newsBookmarks,
    unreadThread,
    showCaseActions,
    tempNewsCaches,
  ];
  late final Shape12 localSession = Shape12(
      source: i0.VersionedTable(
        entityName: 'local_session',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_50,
          _column_51,
          _column_52,
          _column_53,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 newsLogs = Shape1(
      source: i0.VersionedTable(
        entityName: 'news_logs',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape10 unreadNews = Shape10(
      source: i0.VersionedTable(
        entityName: 'unread_news',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 newsBookmarks = Shape3(
      source: i0.VersionedTable(
        entityName: 'news_bookmarks',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(news_id)',
        ],
        columns: [
          _column_28,
          _column_29,
          _column_14,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 unreadThread = Shape4(
      source: i0.VersionedTable(
        entityName: 'unread_thread',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_32,
          _column_11,
          _column_12,
          _column_22,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 showCaseActions = Shape5(
      source: i0.VersionedTable(
        entityName: 'show_case_actions',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(action_id)',
        ],
        columns: [
          _column_42,
          _column_43,
          _column_44,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape10 tempNewsCaches = Shape10(
      source: i0.VersionedTable(
        entityName: 'temp_news_caches',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape12 extends i0.VersionedTable {
  Shape12({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get userId =>
      columnsByName['user_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get languageCode =>
      columnsByName['language_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get token =>
      columnsByName['token']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get appVersion =>
      columnsByName['app_version']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get fcmToken =>
      columnsByName['fcm_token']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get lastFatchedThreadId =>
      columnsByName['last_fatched_thread_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get address =>
      columnsByName['address']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get theme =>
      columnsByName['theme']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get fontSize =>
      columnsByName['font_size']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get ratingReminder =>
      columnsByName['rating_reminder']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get lastAskedRating =>
      columnsByName['last_asked_rating']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get lastRequestTime =>
      columnsByName['last_request_time']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get manualRefressCount =>
      columnsByName['manual_refress_count']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<DateTime> _column_52(String aliasedName) =>
    i1.GeneratedColumn<DateTime>('last_request_time', aliasedName, true,
        type: i1.DriftSqlType.dateTime);
i1.GeneratedColumn<int> _column_53(String aliasedName) =>
    i1.GeneratedColumn<int>('manual_refress_count', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Variable(0));

final class _S12 extends i0.VersionedSchema {
  _S12({required super.database}) : super(version: 12);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    localSession,
    newsLogs,
    unreadNews,
    newsBookmarks,
    unreadThread,
    showCaseActions,
    tempNewsCaches,
  ];
  late final Shape13 localSession = Shape13(
      source: i0.VersionedTable(
        entityName: 'local_session',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_50,
          _column_51,
          _column_52,
          _column_53,
          _column_54,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 newsLogs = Shape1(
      source: i0.VersionedTable(
        entityName: 'news_logs',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape10 unreadNews = Shape10(
      source: i0.VersionedTable(
        entityName: 'unread_news',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 newsBookmarks = Shape3(
      source: i0.VersionedTable(
        entityName: 'news_bookmarks',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(news_id)',
        ],
        columns: [
          _column_28,
          _column_29,
          _column_14,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 unreadThread = Shape4(
      source: i0.VersionedTable(
        entityName: 'unread_thread',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_32,
          _column_11,
          _column_12,
          _column_22,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 showCaseActions = Shape5(
      source: i0.VersionedTable(
        entityName: 'show_case_actions',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(action_id)',
        ],
        columns: [
          _column_42,
          _column_43,
          _column_44,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape10 tempNewsCaches = Shape10(
      source: i0.VersionedTable(
        entityName: 'temp_news_caches',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape13 extends i0.VersionedTable {
  Shape13({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get userId =>
      columnsByName['user_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get languageCode =>
      columnsByName['language_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get token =>
      columnsByName['token']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get appVersion =>
      columnsByName['app_version']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get fcmToken =>
      columnsByName['fcm_token']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get lastFatchedThreadId =>
      columnsByName['last_fatched_thread_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get address =>
      columnsByName['address']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get theme =>
      columnsByName['theme']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get fontSize =>
      columnsByName['font_size']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get ratingReminder =>
      columnsByName['rating_reminder']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get lastAskedRating =>
      columnsByName['last_asked_rating']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get lastRequestTime =>
      columnsByName['last_request_time']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get manualRefressCount =>
      columnsByName['manual_refress_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get notificationPreference =>
      columnsByName['notification_preference']! as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<int> _column_54(String aliasedName) =>
    i1.GeneratedColumn<int>('notification_preference', aliasedName, false,
        type: i1.DriftSqlType.int,
        defaultValue: Variable(NotificationPreference.normal.index));

final class _S13 extends i0.VersionedSchema {
  _S13({required super.database}) : super(version: 13);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    localSession,
    newsLogs,
    unreadNews,
    newsBookmarks,
    unreadThread,
    showCaseActions,
    tempNewsCaches,
  ];
  late final Shape14 localSession = Shape14(
      source: i0.VersionedTable(
        entityName: 'local_session',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_50,
          _column_51,
          _column_52,
          _column_53,
          _column_54,
          _column_55,
          _column_56,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 newsLogs = Shape1(
      source: i0.VersionedTable(
        entityName: 'news_logs',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape10 unreadNews = Shape10(
      source: i0.VersionedTable(
        entityName: 'unread_news',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 newsBookmarks = Shape3(
      source: i0.VersionedTable(
        entityName: 'news_bookmarks',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(news_id)',
        ],
        columns: [
          _column_28,
          _column_29,
          _column_14,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 unreadThread = Shape4(
      source: i0.VersionedTable(
        entityName: 'unread_thread',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_32,
          _column_11,
          _column_12,
          _column_22,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 showCaseActions = Shape5(
      source: i0.VersionedTable(
        entityName: 'show_case_actions',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(action_id)',
        ],
        columns: [
          _column_42,
          _column_43,
          _column_44,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape10 tempNewsCaches = Shape10(
      source: i0.VersionedTable(
        entityName: 'temp_news_caches',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape14 extends i0.VersionedTable {
  Shape14({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get userId =>
      columnsByName['user_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get languageCode =>
      columnsByName['language_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get token =>
      columnsByName['token']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get appVersion =>
      columnsByName['app_version']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get fcmToken =>
      columnsByName['fcm_token']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get lastFatchedThreadId =>
      columnsByName['last_fatched_thread_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get address =>
      columnsByName['address']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get theme =>
      columnsByName['theme']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get fontSize =>
      columnsByName['font_size']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get ratingReminder =>
      columnsByName['rating_reminder']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get lastAskedRating =>
      columnsByName['last_asked_rating']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get lastRequestTime =>
      columnsByName['last_request_time']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get manualRefressCount =>
      columnsByName['manual_refress_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get notificationPreference =>
      columnsByName['notification_preference']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get notificationPermission =>
      columnsByName['notification_permission']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get notificationPermissionAlertShownCount =>
      columnsByName['notification_permission_alert_shown_count']!
          as i1.GeneratedColumn<int>;
}

i1.GeneratedColumn<int> _column_55(String aliasedName) =>
    i1.GeneratedColumn<int>('notification_permission', aliasedName, true,
        type: i1.DriftSqlType.int);
i1.GeneratedColumn<int> _column_56(String aliasedName) =>
    i1.GeneratedColumn<int>(
        'notification_permission_alert_shown_count', aliasedName, false,
        type: i1.DriftSqlType.int, defaultValue: const Variable(0));

final class _S14 extends i0.VersionedSchema {
  _S14({required super.database}) : super(version: 14);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    localSession,
    newsLogs,
    unreadNews,
    newsBookmarks,
    unreadThread,
    showCaseActions,
    tempNewsCaches,
  ];
  late final Shape15 localSession = Shape15(
      source: i0.VersionedTable(
        entityName: 'local_session',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_50,
          _column_51,
          _column_52,
          _column_53,
          _column_54,
          _column_55,
          _column_56,
          _column_57,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 newsLogs = Shape1(
      source: i0.VersionedTable(
        entityName: 'news_logs',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape10 unreadNews = Shape10(
      source: i0.VersionedTable(
        entityName: 'unread_news',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 newsBookmarks = Shape3(
      source: i0.VersionedTable(
        entityName: 'news_bookmarks',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(news_id)',
        ],
        columns: [
          _column_28,
          _column_29,
          _column_14,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 unreadThread = Shape4(
      source: i0.VersionedTable(
        entityName: 'unread_thread',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_32,
          _column_11,
          _column_12,
          _column_22,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 showCaseActions = Shape5(
      source: i0.VersionedTable(
        entityName: 'show_case_actions',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(action_id)',
        ],
        columns: [
          _column_42,
          _column_43,
          _column_44,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape10 tempNewsCaches = Shape10(
      source: i0.VersionedTable(
        entityName: 'temp_news_caches',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape15 extends i0.VersionedTable {
  Shape15({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get userId =>
      columnsByName['user_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get languageCode =>
      columnsByName['language_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get token =>
      columnsByName['token']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get appVersion =>
      columnsByName['app_version']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get fcmToken =>
      columnsByName['fcm_token']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get lastFatchedThreadId =>
      columnsByName['last_fatched_thread_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get address =>
      columnsByName['address']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get theme =>
      columnsByName['theme']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get fontSize =>
      columnsByName['font_size']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get ratingReminder =>
      columnsByName['rating_reminder']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get lastAskedRating =>
      columnsByName['last_asked_rating']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get lastRequestTime =>
      columnsByName['last_request_time']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get manualRefressCount =>
      columnsByName['manual_refress_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get notificationPreference =>
      columnsByName['notification_preference']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get notificationPermission =>
      columnsByName['notification_permission']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get notificationPermissionAlertShownCount =>
      columnsByName['notification_permission_alert_shown_count']!
          as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get hideNewsOption =>
      columnsByName['hide_news_option']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<bool> _column_57(String aliasedName) =>
    i1.GeneratedColumn<bool>('hide_news_option', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("hide_news_option" IN (0, 1))'),
        defaultValue: const Variable(false));

final class _S15 extends i0.VersionedSchema {
  _S15({required super.database}) : super(version: 15);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    localSession,
    newsLogs,
    unreadNews,
    newsBookmarks,
    unreadThread,
    showCaseActions,
    tempNewsCaches,
    categoryNewsCache,
  ];
  late final Shape16 localSession = Shape16(
      source: i0.VersionedTable(
        entityName: 'local_session',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_50,
          _column_51,
          _column_52,
          _column_58,
          _column_53,
          _column_54,
          _column_55,
          _column_56,
          _column_57,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 newsLogs = Shape1(
      source: i0.VersionedTable(
        entityName: 'news_logs',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape10 unreadNews = Shape10(
      source: i0.VersionedTable(
        entityName: 'unread_news',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 newsBookmarks = Shape3(
      source: i0.VersionedTable(
        entityName: 'news_bookmarks',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(news_id)',
        ],
        columns: [
          _column_28,
          _column_29,
          _column_14,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 unreadThread = Shape4(
      source: i0.VersionedTable(
        entityName: 'unread_thread',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_32,
          _column_11,
          _column_12,
          _column_22,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 showCaseActions = Shape5(
      source: i0.VersionedTable(
        entityName: 'show_case_actions',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(action_id)',
        ],
        columns: [
          _column_42,
          _column_43,
          _column_44,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape10 tempNewsCaches = Shape10(
      source: i0.VersionedTable(
        entityName: 'temp_news_caches',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 categoryNewsCache = Shape17(
      source: i0.VersionedTable(
        entityName: 'category_news_cache',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_59,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
          _column_60,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape16 extends i0.VersionedTable {
  Shape16({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get userId =>
      columnsByName['user_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get languageCode =>
      columnsByName['language_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get token =>
      columnsByName['token']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get appVersion =>
      columnsByName['app_version']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get fcmToken =>
      columnsByName['fcm_token']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get lastFatchedThreadId =>
      columnsByName['last_fatched_thread_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get address =>
      columnsByName['address']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get theme =>
      columnsByName['theme']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get fontSize =>
      columnsByName['font_size']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get ratingReminder =>
      columnsByName['rating_reminder']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get lastAskedRating =>
      columnsByName['last_asked_rating']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get lastRequestTime =>
      columnsByName['last_request_time']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get lastCategoryRequestTime =>
      columnsByName['last_category_request_time']!
          as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get manualRefressCount =>
      columnsByName['manual_refress_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get notificationPreference =>
      columnsByName['notification_preference']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get notificationPermission =>
      columnsByName['notification_permission']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get notificationPermissionAlertShownCount =>
      columnsByName['notification_permission_alert_shown_count']!
          as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get hideNewsOption =>
      columnsByName['hide_news_option']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<DateTime> _column_58(String aliasedName) =>
    i1.GeneratedColumn<DateTime>(
        'last_category_request_time', aliasedName, true,
        type: i1.DriftSqlType.dateTime);

class Shape17 extends i0.VersionedTable {
  Shape17({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get newsId =>
      columnsByName['news_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get categoryId =>
      columnsByName['category_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get title =>
      columnsByName['title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description =>
      columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get category =>
      columnsByName['category']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get language =>
      columnsByName['language']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get url =>
      columnsByName['url']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get urlToImage =>
      columnsByName['url_to_image']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get priority =>
      columnsByName['priority']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get publishedOn =>
      columnsByName['published_on']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get tags =>
      columnsByName['tags']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get faq =>
      columnsByName['faq']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get poll =>
      columnsByName['poll']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get originalTitle =>
      columnsByName['original_title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get formattedDescription =>
      columnsByName['formatted_description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get source =>
      columnsByName['source']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get pollApproved =>
      columnsByName['poll_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get quizApproved =>
      columnsByName['quiz_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get faqApproved =>
      columnsByName['faq_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get notificationTitle =>
      columnsByName['notification_title']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_59(String aliasedName) =>
    i1.GeneratedColumn<String>('category_id', aliasedName, false,
        type: i1.DriftSqlType.string);
i1.GeneratedColumn<String> _column_60(String aliasedName) =>
    i1.GeneratedColumn<String>('notification_title', aliasedName, true,
        type: i1.DriftSqlType.string);

final class _S16 extends i0.VersionedSchema {
  _S16({required super.database}) : super(version: 16);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    localSession,
    newsLogs,
    unreadNews,
    newsBookmarks,
    unreadThread,
    showCaseActions,
    tempNewsCaches,
    categoryNewsCache,
  ];
  late final Shape16 localSession = Shape16(
      source: i0.VersionedTable(
        entityName: 'local_session',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_50,
          _column_51,
          _column_52,
          _column_58,
          _column_53,
          _column_54,
          _column_55,
          _column_56,
          _column_57,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 newsLogs = Shape1(
      source: i0.VersionedTable(
        entityName: 'news_logs',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape18 unreadNews = Shape18(
      source: i0.VersionedTable(
        entityName: 'unread_news',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
          _column_60,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 newsBookmarks = Shape3(
      source: i0.VersionedTable(
        entityName: 'news_bookmarks',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(news_id)',
        ],
        columns: [
          _column_28,
          _column_29,
          _column_14,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 unreadThread = Shape4(
      source: i0.VersionedTable(
        entityName: 'unread_thread',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_32,
          _column_11,
          _column_12,
          _column_22,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 showCaseActions = Shape5(
      source: i0.VersionedTable(
        entityName: 'show_case_actions',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(action_id)',
        ],
        columns: [
          _column_42,
          _column_43,
          _column_44,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape18 tempNewsCaches = Shape18(
      source: i0.VersionedTable(
        entityName: 'temp_news_caches',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
          _column_60,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape17 categoryNewsCache = Shape17(
      source: i0.VersionedTable(
        entityName: 'category_news_cache',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_59,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
          _column_60,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape18 extends i0.VersionedTable {
  Shape18({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get newsId =>
      columnsByName['news_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get title =>
      columnsByName['title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description =>
      columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get category =>
      columnsByName['category']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get language =>
      columnsByName['language']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get url =>
      columnsByName['url']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get urlToImage =>
      columnsByName['url_to_image']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get priority =>
      columnsByName['priority']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get publishedOn =>
      columnsByName['published_on']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get tags =>
      columnsByName['tags']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get faq =>
      columnsByName['faq']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get poll =>
      columnsByName['poll']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get originalTitle =>
      columnsByName['original_title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get formattedDescription =>
      columnsByName['formatted_description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get source =>
      columnsByName['source']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get pollApproved =>
      columnsByName['poll_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get quizApproved =>
      columnsByName['quiz_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get faqApproved =>
      columnsByName['faq_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get notificationTitle =>
      columnsByName['notification_title']! as i1.GeneratedColumn<String>;
}

final class _S17 extends i0.VersionedSchema {
  _S17({required super.database}) : super(version: 17);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    localSession,
    newsLogs,
    unreadNews,
    newsBookmarks,
    unreadThread,
    showCaseActions,
    tempNewsCaches,
    categoryNewsCache,
  ];
  late final Shape16 localSession = Shape16(
      source: i0.VersionedTable(
        entityName: 'local_session',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_50,
          _column_51,
          _column_52,
          _column_58,
          _column_53,
          _column_54,
          _column_55,
          _column_56,
          _column_57,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 newsLogs = Shape1(
      source: i0.VersionedTable(
        entityName: 'news_logs',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape19 unreadNews = Shape19(
      source: i0.VersionedTable(
        entityName: 'unread_news',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_61,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
          _column_60,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 newsBookmarks = Shape3(
      source: i0.VersionedTable(
        entityName: 'news_bookmarks',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(news_id)',
        ],
        columns: [
          _column_28,
          _column_29,
          _column_14,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 unreadThread = Shape4(
      source: i0.VersionedTable(
        entityName: 'unread_thread',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_32,
          _column_11,
          _column_12,
          _column_22,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 showCaseActions = Shape5(
      source: i0.VersionedTable(
        entityName: 'show_case_actions',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(action_id)',
        ],
        columns: [
          _column_42,
          _column_43,
          _column_44,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape19 tempNewsCaches = Shape19(
      source: i0.VersionedTable(
        entityName: 'temp_news_caches',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_61,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
          _column_60,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape20 categoryNewsCache = Shape20(
      source: i0.VersionedTable(
        entityName: 'category_news_cache',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_59,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_61,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
          _column_60,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape19 extends i0.VersionedTable {
  Shape19({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get newsId =>
      columnsByName['news_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get title =>
      columnsByName['title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description =>
      columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get category =>
      columnsByName['category']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get language =>
      columnsByName['language']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get url =>
      columnsByName['url']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get urlToImage =>
      columnsByName['url_to_image']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get priority =>
      columnsByName['priority']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get publishedOn =>
      columnsByName['published_on']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get tags =>
      columnsByName['tags']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get faq =>
      columnsByName['faq']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get poll =>
      columnsByName['poll']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get doubts =>
      columnsByName['doubts']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get originalTitle =>
      columnsByName['original_title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get formattedDescription =>
      columnsByName['formatted_description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get source =>
      columnsByName['source']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get pollApproved =>
      columnsByName['poll_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get quizApproved =>
      columnsByName['quiz_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get faqApproved =>
      columnsByName['faq_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get notificationTitle =>
      columnsByName['notification_title']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_61(String aliasedName) =>
    i1.GeneratedColumn<String>('doubts', aliasedName, true,
        type: i1.DriftSqlType.string);

class Shape20 extends i0.VersionedTable {
  Shape20({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get newsId =>
      columnsByName['news_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get categoryId =>
      columnsByName['category_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get title =>
      columnsByName['title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description =>
      columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get category =>
      columnsByName['category']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get language =>
      columnsByName['language']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get url =>
      columnsByName['url']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get urlToImage =>
      columnsByName['url_to_image']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get priority =>
      columnsByName['priority']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get publishedOn =>
      columnsByName['published_on']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get tags =>
      columnsByName['tags']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get faq =>
      columnsByName['faq']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get poll =>
      columnsByName['poll']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get doubts =>
      columnsByName['doubts']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get originalTitle =>
      columnsByName['original_title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get formattedDescription =>
      columnsByName['formatted_description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get source =>
      columnsByName['source']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get pollApproved =>
      columnsByName['poll_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get quizApproved =>
      columnsByName['quiz_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get faqApproved =>
      columnsByName['faq_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get notificationTitle =>
      columnsByName['notification_title']! as i1.GeneratedColumn<String>;
}

final class _S18 extends i0.VersionedSchema {
  _S18({required super.database}) : super(version: 18);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    localSession,
    newsLogs,
    unreadNews,
    newsBookmarks,
    unreadThread,
    showCaseActions,
    tempNewsCaches,
    categoryNewsCache,
  ];
  late final Shape16 localSession = Shape16(
      source: i0.VersionedTable(
        entityName: 'local_session',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_50,
          _column_51,
          _column_52,
          _column_58,
          _column_53,
          _column_54,
          _column_55,
          _column_56,
          _column_57,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 newsLogs = Shape1(
      source: i0.VersionedTable(
        entityName: 'news_logs',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape21 unreadNews = Shape21(
      source: i0.VersionedTable(
        entityName: 'unread_news',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_61,
          _column_62,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
          _column_60,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 newsBookmarks = Shape3(
      source: i0.VersionedTable(
        entityName: 'news_bookmarks',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(news_id)',
        ],
        columns: [
          _column_28,
          _column_29,
          _column_14,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 unreadThread = Shape4(
      source: i0.VersionedTable(
        entityName: 'unread_thread',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_32,
          _column_11,
          _column_12,
          _column_22,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 showCaseActions = Shape5(
      source: i0.VersionedTable(
        entityName: 'show_case_actions',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(action_id)',
        ],
        columns: [
          _column_42,
          _column_43,
          _column_44,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape21 tempNewsCaches = Shape21(
      source: i0.VersionedTable(
        entityName: 'temp_news_caches',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_61,
          _column_62,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
          _column_60,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape22 categoryNewsCache = Shape22(
      source: i0.VersionedTable(
        entityName: 'category_news_cache',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_59,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_61,
          _column_62,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
          _column_60,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape21 extends i0.VersionedTable {
  Shape21({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get newsId =>
      columnsByName['news_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get title =>
      columnsByName['title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description =>
      columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get category =>
      columnsByName['category']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get language =>
      columnsByName['language']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get url =>
      columnsByName['url']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get urlToImage =>
      columnsByName['url_to_image']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get priority =>
      columnsByName['priority']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get publishedOn =>
      columnsByName['published_on']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get tags =>
      columnsByName['tags']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get faq =>
      columnsByName['faq']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get poll =>
      columnsByName['poll']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get doubts =>
      columnsByName['doubts']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get sections =>
      columnsByName['sections']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get originalTitle =>
      columnsByName['original_title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get formattedDescription =>
      columnsByName['formatted_description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get source =>
      columnsByName['source']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get pollApproved =>
      columnsByName['poll_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get quizApproved =>
      columnsByName['quiz_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get faqApproved =>
      columnsByName['faq_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get notificationTitle =>
      columnsByName['notification_title']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_62(String aliasedName) =>
    i1.GeneratedColumn<String>('sections', aliasedName, true,
        type: i1.DriftSqlType.string);

class Shape22 extends i0.VersionedTable {
  Shape22({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get newsId =>
      columnsByName['news_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get categoryId =>
      columnsByName['category_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get title =>
      columnsByName['title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description =>
      columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get category =>
      columnsByName['category']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get language =>
      columnsByName['language']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get url =>
      columnsByName['url']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get urlToImage =>
      columnsByName['url_to_image']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get priority =>
      columnsByName['priority']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get publishedOn =>
      columnsByName['published_on']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get tags =>
      columnsByName['tags']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get faq =>
      columnsByName['faq']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get poll =>
      columnsByName['poll']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get doubts =>
      columnsByName['doubts']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get sections =>
      columnsByName['sections']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get originalTitle =>
      columnsByName['original_title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get formattedDescription =>
      columnsByName['formatted_description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get source =>
      columnsByName['source']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get pollApproved =>
      columnsByName['poll_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get quizApproved =>
      columnsByName['quiz_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get faqApproved =>
      columnsByName['faq_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get notificationTitle =>
      columnsByName['notification_title']! as i1.GeneratedColumn<String>;
}

final class _S19 extends i0.VersionedSchema {
  _S19({required super.database}) : super(version: 19);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    localSession,
    newsLogs,
    unreadNews,
    newsBookmarks,
    unreadThread,
    showCaseActions,
    tempNewsCaches,
    categoryNewsCache,
  ];
  late final Shape23 localSession = Shape23(
      source: i0.VersionedTable(
        entityName: 'local_session',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_50,
          _column_51,
          _column_52,
          _column_58,
          _column_53,
          _column_54,
          _column_55,
          _column_56,
          _column_57,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 newsLogs = Shape1(
      source: i0.VersionedTable(
        entityName: 'news_logs',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape21 unreadNews = Shape21(
      source: i0.VersionedTable(
        entityName: 'unread_news',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_61,
          _column_62,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
          _column_60,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 newsBookmarks = Shape3(
      source: i0.VersionedTable(
        entityName: 'news_bookmarks',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(news_id)',
        ],
        columns: [
          _column_28,
          _column_29,
          _column_14,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 unreadThread = Shape4(
      source: i0.VersionedTable(
        entityName: 'unread_thread',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_32,
          _column_11,
          _column_12,
          _column_22,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 showCaseActions = Shape5(
      source: i0.VersionedTable(
        entityName: 'show_case_actions',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(action_id)',
        ],
        columns: [
          _column_42,
          _column_43,
          _column_44,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape21 tempNewsCaches = Shape21(
      source: i0.VersionedTable(
        entityName: 'temp_news_caches',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_61,
          _column_62,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
          _column_60,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape22 categoryNewsCache = Shape22(
      source: i0.VersionedTable(
        entityName: 'category_news_cache',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_59,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_61,
          _column_62,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
          _column_60,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape23 extends i0.VersionedTable {
  Shape23({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get userId =>
      columnsByName['user_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get languageCode =>
      columnsByName['language_code']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get token =>
      columnsByName['token']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get appVersion =>
      columnsByName['app_version']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get fcmToken =>
      columnsByName['fcm_token']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get lastFatchedThreadId =>
      columnsByName['last_fatched_thread_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get address =>
      columnsByName['address']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get theme =>
      columnsByName['theme']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<String> get fontSize =>
      columnsByName['font_size']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<int> get ratingReminder =>
      columnsByName['rating_reminder']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<DateTime> get lastAskedRating =>
      columnsByName['last_asked_rating']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get lastRequestTime =>
      columnsByName['last_request_time']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get lastCategoryRequestTime =>
      columnsByName['last_category_request_time']!
          as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<int> get manualRefressCount =>
      columnsByName['manual_refress_count']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get notificationPreference =>
      columnsByName['notification_preference']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get notificationPermission =>
      columnsByName['notification_permission']! as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<int> get notificationPermissionAlertShownCount =>
      columnsByName['notification_permission_alert_shown_count']!
          as i1.GeneratedColumn<int>;
  i1.GeneratedColumn<bool> get hideNewsOption =>
      columnsByName['hide_news_option']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get hideDoubts =>
      columnsByName['hide_doubts']! as i1.GeneratedColumn<bool>;
}

i1.GeneratedColumn<bool> _column_63(String aliasedName) =>
    i1.GeneratedColumn<bool>('hide_doubts', aliasedName, false,
        type: i1.DriftSqlType.bool,
        defaultConstraints: i1.GeneratedColumn.constraintIsAlways(
            'CHECK ("hide_doubts" IN (0, 1))'),
        defaultValue: const Variable(false));

final class _S20 extends i0.VersionedSchema {
  _S20({required super.database}) : super(version: 20);
  @override
  late final List<i1.DatabaseSchemaEntity> entities = [
    localSession,
    newsLogs,
    unreadNews,
    newsBookmarks,
    unreadThread,
    showCaseActions,
    tempNewsCaches,
    categoryNewsCache,
  ];
  late final Shape23 localSession = Shape23(
      source: i0.VersionedTable(
        entityName: 'local_session',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_0,
          _column_1,
          _column_2,
          _column_3,
          _column_4,
          _column_5,
          _column_6,
          _column_7,
          _column_8,
          _column_50,
          _column_51,
          _column_52,
          _column_58,
          _column_53,
          _column_54,
          _column_55,
          _column_56,
          _column_57,
          _column_63,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape1 newsLogs = Shape1(
      source: i0.VersionedTable(
        entityName: 'news_logs',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_10,
          _column_11,
          _column_12,
          _column_13,
          _column_14,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape24 unreadNews = Shape24(
      source: i0.VersionedTable(
        entityName: 'unread_news',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_61,
          _column_62,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
          _column_60,
          _column_64,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape3 newsBookmarks = Shape3(
      source: i0.VersionedTable(
        entityName: 'news_bookmarks',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(news_id)',
        ],
        columns: [
          _column_28,
          _column_29,
          _column_14,
          _column_30,
          _column_31,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape4 unreadThread = Shape4(
      source: i0.VersionedTable(
        entityName: 'unread_thread',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_32,
          _column_11,
          _column_12,
          _column_22,
          _column_33,
          _column_34,
          _column_35,
          _column_36,
          _column_37,
          _column_38,
          _column_39,
          _column_40,
          _column_41,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape5 showCaseActions = Shape5(
      source: i0.VersionedTable(
        entityName: 'show_case_actions',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [
          'PRIMARY KEY(action_id)',
        ],
        columns: [
          _column_42,
          _column_43,
          _column_44,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape21 tempNewsCaches = Shape21(
      source: i0.VersionedTable(
        entityName: 'temp_news_caches',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_61,
          _column_62,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
          _column_60,
        ],
        attachedDatabase: database,
      ),
      alias: null);
  late final Shape22 categoryNewsCache = Shape22(
      source: i0.VersionedTable(
        entityName: 'category_news_cache',
        withoutRowId: false,
        isStrict: false,
        tableConstraints: [],
        columns: [
          _column_9,
          _column_59,
          _column_15,
          _column_16,
          _column_17,
          _column_18,
          _column_19,
          _column_20,
          _column_21,
          _column_22,
          _column_23,
          _column_24,
          _column_25,
          _column_26,
          _column_27,
          _column_61,
          _column_62,
          _column_46,
          _column_45,
          _column_35,
          _column_47,
          _column_48,
          _column_49,
          _column_60,
        ],
        attachedDatabase: database,
      ),
      alias: null);
}

class Shape24 extends i0.VersionedTable {
  Shape24({required super.source, required super.alias}) : super.aliased();
  i1.GeneratedColumn<String> get newsId =>
      columnsByName['news_id']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get title =>
      columnsByName['title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get description =>
      columnsByName['description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get category =>
      columnsByName['category']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get language =>
      columnsByName['language']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get url =>
      columnsByName['url']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get urlToImage =>
      columnsByName['url_to_image']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get priority =>
      columnsByName['priority']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<DateTime> get publishedOn =>
      columnsByName['published_on']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get createdAt =>
      columnsByName['created_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<DateTime> get updatedAt =>
      columnsByName['updated_at']! as i1.GeneratedColumn<DateTime>;
  i1.GeneratedColumn<String> get tags =>
      columnsByName['tags']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get faq =>
      columnsByName['faq']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get poll =>
      columnsByName['poll']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get doubts =>
      columnsByName['doubts']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get sections =>
      columnsByName['sections']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get originalTitle =>
      columnsByName['original_title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get formattedDescription =>
      columnsByName['formatted_description']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get source =>
      columnsByName['source']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<bool> get pollApproved =>
      columnsByName['poll_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get quizApproved =>
      columnsByName['quiz_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<bool> get faqApproved =>
      columnsByName['faq_approved']! as i1.GeneratedColumn<bool>;
  i1.GeneratedColumn<String> get notificationTitle =>
      columnsByName['notification_title']! as i1.GeneratedColumn<String>;
  i1.GeneratedColumn<String> get xUrl =>
      columnsByName['x_url']! as i1.GeneratedColumn<String>;
}

i1.GeneratedColumn<String> _column_64(String aliasedName) =>
    i1.GeneratedColumn<String>('x_url', aliasedName, true,
        type: i1.DriftSqlType.string);
i0.MigrationStepWithVersion migrationSteps({
  required Future<void> Function(i1.Migrator m, _S2 schema) from1To2,
  required Future<void> Function(i1.Migrator m, _S3 schema) from2To3,
  required Future<void> Function(i1.Migrator m, _S5 schema) from3To5,
  required Future<void> Function(i1.Migrator m, _S6 schema) from5To6,
  required Future<void> Function(i1.Migrator m, _S7 schema) from6To7,
  required Future<void> Function(i1.Migrator m, _S8 schema) from7To8,
  required Future<void> Function(i1.Migrator m, _S9 schema) from8To9,
  required Future<void> Function(i1.Migrator m, _S10 schema) from9To10,
  required Future<void> Function(i1.Migrator m, _S11 schema) from10To11,
  required Future<void> Function(i1.Migrator m, _S12 schema) from11To12,
  required Future<void> Function(i1.Migrator m, _S13 schema) from12To13,
  required Future<void> Function(i1.Migrator m, _S14 schema) from13To14,
  required Future<void> Function(i1.Migrator m, _S15 schema) from14To15,
  required Future<void> Function(i1.Migrator m, _S16 schema) from15To16,
  required Future<void> Function(i1.Migrator m, _S17 schema) from16To17,
  required Future<void> Function(i1.Migrator m, _S18 schema) from17To18,
  required Future<void> Function(i1.Migrator m, _S19 schema) from18To19,
  required Future<void> Function(i1.Migrator m, _S20 schema) from19To20,
}) {
  return (currentVersion, database) async {
    switch (currentVersion) {
      case 1:
        final schema = _S2(database: database);
        final migrator = i1.Migrator(database, schema);
        await from1To2(migrator, schema);
        return 2;
      case 2:
        final schema = _S3(database: database);
        final migrator = i1.Migrator(database, schema);
        await from2To3(migrator, schema);
        return 3;
      case 3:
        final schema = _S5(database: database);
        final migrator = i1.Migrator(database, schema);
        await from3To5(migrator, schema);
        return 5;
      case 5:
        final schema = _S6(database: database);
        final migrator = i1.Migrator(database, schema);
        await from5To6(migrator, schema);
        return 6;
      case 6:
        final schema = _S7(database: database);
        final migrator = i1.Migrator(database, schema);
        await from6To7(migrator, schema);
        return 7;
      case 7:
        final schema = _S8(database: database);
        final migrator = i1.Migrator(database, schema);
        await from7To8(migrator, schema);
        return 8;
      case 8:
        final schema = _S9(database: database);
        final migrator = i1.Migrator(database, schema);
        await from8To9(migrator, schema);
        return 9;
      case 9:
        final schema = _S10(database: database);
        final migrator = i1.Migrator(database, schema);
        await from9To10(migrator, schema);
        return 10;
      case 10:
        final schema = _S11(database: database);
        final migrator = i1.Migrator(database, schema);
        await from10To11(migrator, schema);
        return 11;
      case 11:
        final schema = _S12(database: database);
        final migrator = i1.Migrator(database, schema);
        await from11To12(migrator, schema);
        return 12;
      case 12:
        final schema = _S13(database: database);
        final migrator = i1.Migrator(database, schema);
        await from12To13(migrator, schema);
        return 13;
      case 13:
        final schema = _S14(database: database);
        final migrator = i1.Migrator(database, schema);
        await from13To14(migrator, schema);
        return 14;
      case 14:
        final schema = _S15(database: database);
        final migrator = i1.Migrator(database, schema);
        await from14To15(migrator, schema);
        return 15;
      case 15:
        final schema = _S16(database: database);
        final migrator = i1.Migrator(database, schema);
        await from15To16(migrator, schema);
        return 16;
      case 16:
        final schema = _S17(database: database);
        final migrator = i1.Migrator(database, schema);
        await from16To17(migrator, schema);
        return 17;
      case 17:
        final schema = _S18(database: database);
        final migrator = i1.Migrator(database, schema);
        await from17To18(migrator, schema);
        return 18;
      case 18:
        final schema = _S19(database: database);
        final migrator = i1.Migrator(database, schema);
        await from18To19(migrator, schema);
        return 19;
      case 19:
        final schema = _S20(database: database);
        final migrator = i1.Migrator(database, schema);
        await from19To20(migrator, schema);
        return 20;
      default:
        throw ArgumentError.value('Unknown migration from $currentVersion');
    }
  };
}

i1.OnUpgrade stepByStep({
  required Future<void> Function(i1.Migrator m, _S2 schema) from1To2,
  required Future<void> Function(i1.Migrator m, _S3 schema) from2To3,
  required Future<void> Function(i1.Migrator m, _S5 schema) from3To5,
  required Future<void> Function(i1.Migrator m, _S6 schema) from5To6,
  required Future<void> Function(i1.Migrator m, _S7 schema) from6To7,
  required Future<void> Function(i1.Migrator m, _S8 schema) from7To8,
  required Future<void> Function(i1.Migrator m, _S9 schema) from8To9,
  required Future<void> Function(i1.Migrator m, _S10 schema) from9To10,
  required Future<void> Function(i1.Migrator m, _S11 schema) from10To11,
  required Future<void> Function(i1.Migrator m, _S12 schema) from11To12,
  required Future<void> Function(i1.Migrator m, _S13 schema) from12To13,
  required Future<void> Function(i1.Migrator m, _S14 schema) from13To14,
  required Future<void> Function(i1.Migrator m, _S15 schema) from14To15,
  required Future<void> Function(i1.Migrator m, _S16 schema) from15To16,
  required Future<void> Function(i1.Migrator m, _S17 schema) from16To17,
  required Future<void> Function(i1.Migrator m, _S18 schema) from17To18,
  required Future<void> Function(i1.Migrator m, _S19 schema) from18To19,
  required Future<void> Function(i1.Migrator m, _S20 schema) from19To20,
}) =>
    i0.VersionedSchema.stepByStepHelper(
        step: migrationSteps(
      from1To2: from1To2,
      from2To3: from2To3,
      from3To5: from3To5,
      from5To6: from5To6,
      from6To7: from6To7,
      from7To8: from7To8,
      from8To9: from8To9,
      from9To10: from9To10,
      from10To11: from10To11,
      from11To12: from11To12,
      from12To13: from12To13,
      from13To14: from13To14,
      from14To15: from14To15,
      from15To16: from15To16,
      from16To17: from16To17,
      from17To18: from17To18,
      from18To19: from18To19,
      from19To20: from19To20,
    ));
